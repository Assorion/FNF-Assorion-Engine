Coding Patterns (Need to put this in Wiki).

This can be considered the "Hand Book" of coding in Assorion.

1. I would like to use static variables only for things that need to be carried over from state to state.
2. I would like to not have to change variables remotely (not without a static function atleast).
3. If something is considered "impossible to implement", it is a structual issue, and needs to be reworked.
4. No unnecessary extraction. Why bother taking one function out when it's literally being called once (Though there will be exceptions).
5. Bitwise operations are allowed since if you don't know what they are, then that's just a you problem.
6. No incredibly weird Haxe syntaxes (like enums and such), IMO they cause confusion and we don't really need them.
7. If change needs to happen remotely, then provide a function to do so.
8. Use returns, breaks, and continues whenever possible.
